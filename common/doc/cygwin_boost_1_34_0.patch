diff -r -u boost_1_34_0/Jamfile.v2 boost_1_34_0.patched/Jamfile.v2
--- boost_1_34_0/Jamfile.v2	2007-05-10 20:40:34.000000000 -0700
+++ boost_1_34_0.patched/Jamfile.v2	2007-06-19 09:07:13.875000000 -0700
@@ -407,7 +407,8 @@
             {
                 noversion-file = 
                   [ MATCH "(.*)-[0-9_]+([.]so)[.0-9]*" : $(name) ] 
-                  [ MATCH "(.*)-[0-9_]+([.]a)" : $(name) ] ;
+                  [ MATCH "(.*)-[0-9_]+([.]a)" : $(name) ] 
+                  [ MATCH "(.*)-[0-9_]+([.]dll[.]a)" : $(name) ] ;
             }
                         
             local new-name = 
Only in boost_1_34_0.patched: Jamfile.v2.orig
diff -r -u boost_1_34_0/tools/build/v2/tools/gcc.jam boost_1_34_0.patched/tools/build/v2/tools/gcc.jam
--- boost_1_34_0/tools/build/v2/tools/gcc.jam	2007-05-02 23:09:04.000000000 -0700
+++ boost_1_34_0.patched/tools/build/v2/tools/gcc.jam	2007-06-19 09:07:50.375000000 -0700
@@ -434,42 +434,40 @@
             local generated-targets = [ unix-linking-generator.run $(project) $(name)
                 : $(property-set) : $(sources) ] ;
             
-            # If more than one target was generated, throw out the
-            # last one, which on windows just leaves the import
-            # library.  Most generators on windows simply don't accept
-            # shared libraries as input, but being able to link
-            # directly to a shared library without an import library
-            # is an important capability of GCC.  Therefore, we remove
-            # the target after the action sees it so that dependent
-            # targets don't try to link to both the import library and
-            # the DLL.
-            if [ $(property-set).get <suppress-import-lib> ] = true
-            {
-                return $(generated-targets[0]) $(generated-targets[-1]) ;
-            }
-            else
-            {
-                return $(generated-targets[1-2]) ;
-            }
+            return $(generated-targets) ;
         }
     }
 }
 
-generators.register [ new gcc-linking-generator gcc.link : LIB OBJ : EXE 
-    : <toolset>gcc ] ;
-
 .IMPLIB-COMMAND = ;
-.IMPLIB-TYPE = ;
 if [ os.on-windows ]
 {
     .IMPLIB-COMMAND = "-Wl,--out-implib," ;
-    .IMPLIB-TYPE = IMPORT_LIB ;
+    generators.register
+        [ new gcc-linking-generator gcc.link
+            : OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB
+            : EXE
+            : <toolset>gcc ] ;
+    generators.register
+        [ new gcc-linking-generator gcc.link.dll
+            : OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB
+            : IMPORT_LIB SHARED_LIB
+            : <toolset>gcc ] ;
+}
+else
+{
+    generators.register
+        [ new gcc-linking-generator gcc.link
+            : LIB OBJ
+            : EXE
+            : <toolset>gcc ] ;
+    generators.register
+        [ new gcc-linking-generator gcc.link.dll
+            : LIB OBJ
+            : SHARED_LIB
+            : <toolset>gcc ] ;
 }
 
-generators.register 
-  [ new gcc-linking-generator gcc.link.dll : LIB OBJ : $(.IMPLIB-TYPE) SHARED_LIB 
-    : <toolset>gcc ] ;
-
 # Declare flags for linking
 # First, the common flags
 flags gcc.link OPTIONS <debug-symbols>on : -g ;
diff -r -u boost_1_34_0/tools/build/v2/tools/stage.jam boost_1_34_0.patched/tools/build/v2/tools/stage.jam
--- boost_1_34_0/tools/build/v2/tools/stage.jam	2006-11-10 09:20:05.000000000 -0800
+++ boost_1_34_0.patched/tools/build/v2/tools/stage.jam	2007-06-19 09:07:56.625000000 -0700
@@ -351,7 +351,8 @@
     
     rule run ( project name ? : property-set : source : multiple ? )
     {
-        if [ $(property-set).get <os> ] in NT CYGWIN
+        if [ $(property-set).get <os> ] in NT CYGWIN ||
+            [ $(property-set).get <target-os> ] in windows cygwin
         {
             # Relinking is never needed on NT
             return [ stage.copy-file $(project) 
@@ -383,7 +384,8 @@
     
     rule run ( project name ? : property-set : source : multiple ? )
     {                        
-        if [ $(property-set).get <os> ] = NT
+        if [ $(property-set).get <os> ] in NT CYGWIN ||
+            [ $(property-set).get <target-os> ] in windows cygwin
         {
             local copied = [ stage.copy-file $(project) 
               : $(source) : $(property-set) ] ; 
