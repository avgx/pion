Mac OS X Build Instructions
===========================

Building Boost with ASIO:
-------------------------

Please see the README.boost file for general instructions.


Installing zlib & openssl:
--------------------------

ASIO requires zlib and openssl for compression and SSL/TLS encryption
support, respectively.  These libraries are normally pre-installed on
OS X.  If you do not have them already, you should be able to grab the
latest source code tarballs from the "Third Party Libraries" page on
our website, or from the following sites:

http://www.zlib.net
http://www.openssl.org


Logging frameworks:
-------------------

Note that the use of a logging framework is entirely optional, so you may
skip this step if you like.

We recommend that you use log4cxx for logging.  Log4cxx requires that 
you have the Apache Portable Runtime (APR) installed.  This library is 
normally pre-installed on OS X (make sure that you have "libapr" and
"libapr-util" dynamic libraries within /usr/lib).

If you do not have APR pre-installed, you should be able to grab the
latest source code tarballs from the "Third Party Libraries" page on
our website, or from the following site:

http://apr.apache.org

Please visit the "Third Party Libraries" page on our website to obtain
the source code tarball for log4cxx.  Then, just run:

# tar xvfj log4cxx-<version>.tar.bz2
# cd log4cxx-<version>
# ./configure
# make all
# make install


Installing libxml2:
-------------------

The Pion Platform requires the libxml2 development library for 
manipulating configuration files, and other things.  This library is not 
used by the Pion Network Library, so you may skip this step if you are 
only building the Network Library.

The libxml2 library is normally pre-installed on OS X.  If you do not 
have it already, you should be able to grab the latest source code
tarball from the "Third Party Libraries" page on our website, or from
the following site:

http://www.xmlsoft.org


Installing OSSP uuid:
---------------------

The Pion Platform requires the OSSP uuid library to generate universally 
unique identifiers for most platforms, including OS X.  This library is 
not used by the Pion Network Library, so you may skip this step if you 
are only building the Network Library.

You can download the source code tarball for the uuid library from the 
"Third Party Libraries" page on our website.  After downloading it, just 
run:

# tar xvfz uuid-<version>.tar.gz
# cd uuid-<version>
# ./configure
# make all
# make install


Updating the UNIX Build Tools:
------------------------------

The versions of autoconf, automake and libtool that ship with Mac OS X 
(as of 10.5) are extremely outdated, and will not work with Pion's build 
configuration files.  If you are building from a tarball, then you can 
skip this step.  However, if you want to generate new build scripts from 
a subversion checkout by using the "autogen.sh" script, you will need to 
update these build tools first.

This is easy to do using MacPorts (http://www.macports.org):

# sudo port update autoconf automake libtool

Note that you need to set /opt/local/bin (or the directoy into which you 
installed MacPorts) in your PATH before /usr/bin to ensure that the 
updated build tools are used:

# export PATH=/opt/local/bin:$PATH

Also, you will need to create symbolic links for the updated libtool 
scripts to remove the "g" prefix that MacPorts adds to their filenames:

# sudo ln -s /opt/local/bin/glibtool /opt/local/bin/libtool
# sudo ln -s /opt/local/bin/glibtoolize /opt/local/bin/libtoolize


Building and installing Pion:
-----------------------------

Now you should be able to build and install Pion:

# tar xvfz pion-<PROJECT>-<VERSION>.tar.gz
# cd pion-<PROJECT>-<VERSION>
# ./configure [--with-openssl] [--with-log4cxx]
# make all
# make install

To build and run Pion's unit tests, run "make check"


Building with XCode:
--------------------

There is an XCode project included in the root directory of each project
called "pion-<PROJECT>.xcodeproj".  You must run the "configure" script before
building anything within XCode -- this is used to generate the PionConfig.hpp
configuration file.  The XCode project assumes that you have the following
optional libraries installed: openssl, zlib and log4cxx.

To run PionWebServer from within XCode, you first need to configure
the executable's command arguments by right-clicking on PionWebServer
under the "Executables" group in the left menu, and selecting "Get Info." 
Under the "Arguments" tab, add the following argument:
"-c ../../net/utils/xcodeservices.conf" Next, set PionWebServer as the
"Active Target" and click on the "Build and Go" button.  Building
PionWebServer will also build all of the service plug-ins.
