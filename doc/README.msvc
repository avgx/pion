Microsoft Visual C++ Build Instructions
=======================================

For building under Windows, only the Cygwin/GNU C++ compiler (g++) and
Microsoft's Visual C++ 2005 compiler are currently supported. We plan to add
support for the MinGW compiler in the near future. Please see README.cygwin for
instructions on using the Cygwin/GNU C++ compiler.


Installing Visual C++ 2005 Express Edition:
-------------------------------------------

This whole section can be skipped if you have Visual Studio 2005 (i.e. not the
free Express edition) installed.

To install Visual C++ 2005 Express Edition and the Microsoft Platform SDK,
follow the steps described at the following URL:
http://msdn2.microsoft.com/en-us/express/aa700755.aspx.

In order for the Visual Studio Command Line Compiler to find the necessary
Microsoft Platform SDK files, one more file must be modified: open
"C:\Program Files\Microsoft Visual Studio 8\VC\vcvarsall.bat" in an editor and
add the following lines at the top, after "@echo off":

@set PATH=C:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\Bin;%PATH%
@set INCLUDE=C:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\Include;%INCLUDE%
@set LIB=C:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\Lib;%LIB%


Building Boost with ASIO:
-------------------------

Please see the README.boost file for instructions.

We recommend that you use the bjam tool to build Boost & ASIO for MSVC.  Open
the Visual Studio 2005 Command Prompt, change to the Boost build directory,
and type:

bjam --toolset=msvc --with-thread --with-system --with-filesystem \
	--with-regex --with-date_time debug release threading=multi stage

You may leave out the --with-... options if you wish to build everything.  Note
that the "regex" and "date_time" libraries are required only to avoid errors
when building with MSVC due to problems involving Boost's "auto-linking"
feature.  These libraries are not actually required by pion-net or linked into
your program (unless you use them elsewhere).

We recommend that you create a C:\Boost directory with C:\Boost\Lib and
C:\Boost\Include subdirectories.  To install Boost into these directories, just
copy the files in stage/lib into C:\Boost\Lib, and copy the entire boost/
directory into C:\Boost\Include.


Installing zlib & openssl:
--------------------------

ASIO requires zlib and openssl for compression and SSL/TLS encryption
support, respectively.  For MSVC, we recommend that you build and install
these packages from the source tarballs, available from the following sites:

http://www.zlib.net
http://www.openssl.org


Logging frameworks:
-------------------

Note that the use of a logging framework is entirely optional, so you may
skip this step if you like.

At this time, none of the supported logging libraries build correctly
under Windows.  If you'd like to help add support for these, you can
download the current source code from the following sites:

http://logging.apache.org/log4cxx
http://log4cpp.sourceforge.net
http://log4cplus.sourceforge.net


Building and installing pion-net:
---------------------------------

Update the Visual C++ Directories in the Projects and Solutions section in the 
Options dialog box.  For Include files add "C:\Boost\Include", and for Library
files add "C:\Boost\Lib".

Now you should be able to build the solution file in build/VC/pion-net.sln.


Running the test programs:
--------------------------

Make sure "C:\Boost\Lib" is on your path.

To test PionServiceTest, try running it from <PION_NET_HOME>\tests\ with the 
following command line args: -c vcservices.conf
To run from within the IDE, go to PionServiceTest Property Pages -> Debugging,
and set 'Command Arguments' to the above.
